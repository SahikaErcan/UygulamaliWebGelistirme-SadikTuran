@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;700&display=swap');

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
html {
    font-size: 10px;  /* rem kullandığımzıda 10 px baz alacağız*/
}
body {
    font-family: 'Open Sans', sans-serif;
    font-size: 1.6rem;
    background: #FFF;
    color: #333;
    line-height: 1.6;
}
ul {
    list-style: none;
}

a {
    color: #333;  /* Direk body den kalıtım yoluyla alamadığı için tekrar belirtiyoruz.*/
    text-decoration: none;
}
h1,h2 {
    font-weight: 300;
    line-height: 1.2;
}
p {
    margin: 1rem 0;
}
img {
    width: 100%; /*Resimler responsive olsun, içerisinde bulunduğu container ı kaplasın istiyoruz.*/
}
.text-center {
    text-align: center;
}


/* NAVBAR */
.navbar {
    display: flex; /* Burada oluşturduğumuz 2 elemanımız var. (h1 ve nav) navbar bizim için artık flex-box container ve altındaki elemanlar ise bir flex-item elemanıdır. Bu flex-itemların yan yana gelmesini istiyoruz.*/
    align-items: center; /*h1 ve nav kendi kapsamları içerisinde ortalansın*/
    justify-content: space-between; /* yatay da elemanlar (h1 ve nav) arasında eşit boşluk bırakıyoruz.*/
    background-color: var(--dark);
    opacity: 0.8;
    color: var(--white);
    position: fixed; /*En üst de navbarın sabit kalmasını istiyoruz.*/
    top: 0;
    width: 100%; /*Fixed dediğimiz zaman içerik kadar yer kaplıyordu. Dolayısıyla genişliğini kaybediyor. Bundan dolayı genişlik değeri veriyoruz.*/
    height: 70px;
    padding: 0 3rem; /*html e verdiğimiz 10px lik font-size değeri ile responsive tasarıma uygun olarak 30px değerine karşılık gelir.*/
}
.navbar a {
    /*navbar a verdiğimiz renk sadece içerisinde bulunduğu h1 etiketine etki ediyor. nav etiketinin altındaki a etiketlerine etki etmez. Çünkü containera verdiğimiz color rengi alt elemanlara aktarılamaz. Bizim ekstra o etiketlere ilgili özelliği vermemiz gerekiyor.*/
    color: var(--white);
    padding: 1rem 2rem;
    margin: 0 .5rem;
}
.navbar a:hover {
    border-bottom: 2px solid var(--warning);
}
.navbar ul {
    display: flex; /*ul etiketini flex-container elemanı yapıyoruz ve containerın altında bulunan elemanlar flex-item olur. Biz bu flex-itemları yan yana getiriyoruz.*/
}
.navbar .brand {
    font-weight: 400;
}
.navbar h1 {
    font-size: 3rem;
}
.navbar span {
    color: var(--warning);
}


/* HEADER */
.main-header {
    background-image: url("../img/bg-1.jpeg");
    background-repeat: no-repeat; /*tekrarlamayı yatayda ve dikeyde kapatıyoruz.*/
    background-size: cover; /*resmi çerçeve içerisine yerleştirmesini istiyoruz.*/
    background-position: center; /*resmin tam orta kısmını görmek istediğimizi belirtiyoruz.*/
    height: 100vh; /*Kullanıcının görmüş olduğu görünür alanı viewport height ı %100 tanımlıyoruz. Resim kullanıcı tarayıcısının genişlik ve yüksekliğine göre kendini uydurur.*/
    color: var(--white);
    position: relative; /*main-header::before işlemi için ekledik.*/
}
.main-header .content {
    display: flex;
    flex-direction: column; /*flex-itemlar (h1,p ve a etiketleri) alt alta gelmiş olur.*/
    align-items: center; /*Bunları kendi çerçevelerinde yatayda ve dikeyde ortalıyoruz.*/
    justify-content: center; /*Divin tam ortasına alıyoruz.*/
    text-align: center; /*Kendi çerçevesinde yazıları ortalıyoruz.*/
    /*content divinin yüksekliği içerik kadar. Bu div elemanı ilgili headerın yüksekliği kadar yer kaplaması gerekiyor ki o yüksekliğin içerisinde kendisini ortalayabilsin.*/
    height: 100%; /*İçerisinde bulunduğu containerın (main-header) yüksekliği kadar yer kaplamasını istiyoruz.*/
}

.main-header::before {
    /* resmi gölgeli filtreli hale getirmek için main-headerın öncesinde görünmez bir element oluşturuyoruz. Bu elemente bir yükseklik vererek buna bir zemin rengi vereceğiz.*/
    content: ""; /*İçeriği boş*/
    position: absolute; /*absolute nesne header a göre konumlansın istiyoruz. Bundan doalyı header etiketine position:relative özelliğini ekliyoruz. Böylece headerın içerisinde header kadar yer kaplayacaktır. İgili kapsam içinde başlayacak bir absolute bir nesne*/
    top: 0; /* İlgili headerın tam üst noktasından başlasın istiyoruz.*/
    left: 0; /* yani boş bir içerik 0 a 0 konumundan başlasın diyoruz.*/
    width: 100%; /*İçerisinde bulunduğu container ı tamamen kaplasın.*/
    height: 100%;
    background: rgba(0, 0, 0, 0.6); /*saydam bir zemin rengi oluşturuyoruz.*/
}
.main-header * { /*Oluşturduğumuz saydamlık yazıları da etkiledi bundan dolayı main-header ın altındaki her şey ön plana çıksın istiyoruz.*/
    z-index: 5; /*nesnelerin varsayılan z-index değeri 0 dır. Böylece elemanlar saydam remin üzerine gelecektir.*/
}
.main-header .content h1 {
    font-size: 5.5rem;
}
.main-header .content p {
    font-size: 2.3rem;
    max-width: 60rem; /*İçeriğin kaplayacağı max genişliği 600px olarak ayarlıyoruz.*/
    margin: 2rem 0 3rem;
}


/* ICONS */
.icons {
    padding: 30px;
}
.icons h3 {
    font-weight: 400;
    margin-bottom: 15px;
}
.icons i {
    background-color: var(--warning);
    color: var(--white);
    padding: 1rem;
    border-radius: 50%; /* Yuvarlak bir border oluşur.*/
    margin-bottom: 1.5rem;
}